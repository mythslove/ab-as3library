package net.guttershark.util.collections{	import net.guttershark.util.collections.ArrayCollection;	import net.guttershark.util.collections.IStack;	import net.guttershark.util.collections.StackIterator;		/**	 * Array based Stack data structure.	 */	public class ArrayStack extends ArrayCollection implements IStack 	{		/**		 * ArrayStack Constructor creates a new <code>ArrayStack</code>.		 * You may have it wrap an existing <code>Array</code> or the 		 * constructor will create an empty <code>Array</code> for you.		 */				public function ArrayStack(array:Array = null) 		{			if ( !array ) array = new Array();			super(array);		}		/**		 * @inheritDoc		 */		public function get top():Object 		{			return _array[ _array.length - 1 ];		}		/**		 * @inheritDoc		 */				public function push(o:Object):void 		{			_array.push(o);		}		/**		 * @inheritDoc		 */		public function pop():Object 		{			return _array.pop();		}		/**		 * Returns an iterate which iterates over the items as they would 		 * be returned by subsequent calls to <code>pop</code>.		 */		public override function getIterator():IIterator 		{			return new StackIterator(this);		}			}}