package net.guttershark.util.collections{	import net.guttershark.util.collections.IIterator;		/**	 * Filtered Iterator	 */	public class FilteredIterator implements IIterator 	{		protected var _iterator:IIterator;		protected var _filter:Function;		/**		 * FilteredIterator Constructor		 */		public function FilteredIterator(unfilteredCollection:IIterator, filterFunction:Function) 		{			_iterator = unfilteredCollection;			_filter = filterFunction;					}		/**		 * @inheritDoc		 */		public function hasNext():Boolean 		{			return (peek() != null);		}		/**		 * @inheritDoc		 */		public function next():Object 		{			if (!_iterator.hasNext()) return null;			do 			{				var next:Object = _iterator.next();			} while (next != null && _filter(next) == false);						return next;		}		/**		 * @inheritDoc		 */				public function peek():Object 		{			while (true) 			{				var peek:Object = _iterator.peek();				if (peek == null) return null;				if (Boolean(_filter(peek))) 				{					return peek;				} else 				{					_iterator.next();				}			}			return null;		}	}}