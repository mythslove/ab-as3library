package net.guttershark.util.collections{	import net.guttershark.util.collections.IDestructiveIterator;	import net.guttershark.util.collections.IIterator;		/**	 * Array based Iterator	 */	public class ArrayIterator implements IIterator, IDestructiveIterator 	{		protected var _array:Array;		/**		 * ArrayIterator Constructor		 * @param array	Array of data used in iteration.		 */		public function ArrayIterator(array:Array) 		{			_array = array.concat();		}		/**		 * Check if iterator has a next element.		 * @return Boolean		 */		public function hasNext():Boolean		{			return (_array.length > 0);		}		/**		 * Remove and return the next item in the collection.		 */		public function next():Object 		{			return (_array.shift());		}		/**		 * Return the next item, but don't remove it yet.		 */		public function peek():Object 		{			return (_array.length > 0) ? _array[0] : null;		}		}}